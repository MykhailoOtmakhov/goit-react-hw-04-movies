{"version":3,"sources":["components/NotFound/NotFound.js","components/AppBar/AppBar.js","App.js","reportWebVitals.js","index.js","routes.js"],"names":["NotFound","AppBar","exact","to","routes","homepage","className","activeClassName","moviesPage","HomePageView","lazy","MoviesPageView","MovieDetailsPageView","App","fallback","type","color","height","width","timeout","path","component","movieDetailsPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","cast","reviews"],"mappings":"mQAwBeA,EAVM,WAEb,OACI,+C,eCeGC,EA5BA,WACX,OACI,iCACI,+BACE,6BACE,cAAC,IAAD,CACEC,OAAK,EACLC,GAAKC,IAAOC,SACZC,UAAU,UACVC,gBAAgB,kBAJlB,oBASF,6BACE,cAAC,IAAD,CACEJ,GAAKC,IAAOI,WACZF,UAAU,UACVC,gBAAgB,kBAHlB,2B,iBCVVE,G,MAAeC,gBAAK,kBAAM,kCAC1BC,EAAiBD,gBAAK,kBAAM,uDAC5BE,EAAuBF,gBAAK,kBAAM,uDAwBzBG,EAtBH,kBACV,qCACE,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SACR,cAAC,IAAD,CACEC,KAAK,OACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MANb,SASE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOjB,OAAK,EAACkB,KAAMhB,IAAOC,SAAUgB,UAAWZ,IAC/C,cAAC,IAAD,CAAOW,KAAMhB,IAAOkB,iBAAkBD,UAAWT,IACjD,cAAC,IAAD,CAAOQ,KAAMhB,IAAOI,WAAYa,UAAWV,IAC3C,cAAC,IAAD,CAAOU,UAAWrB,aCjBXuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,K,+BCnBc,KACVlB,SAAU,IACVG,WAAY,UACZc,iBAAkB,mBAClBe,KAAM,wBACNC,QAAS,8B","file":"static/js/main.5f029bbf.chunk.js","sourcesContent":["import Axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n// class HomePage extends Component {\r\n    // state = {\r\n        // movies: [],\r\n    // }\r\n\r\n    // async componentDidMount (){\r\n    //     const response = await Axios.get('https://api.themoviedb.org/3/trending/movie/day?api_key=c380f664e1da9ad09772f37426d65949');\r\n    //     console.log(response.data);\r\n    // } \r\n\r\n    const NotFound = () => {\r\n    // render() {\r\n        return (\r\n            <div>\r\n                NotFound(((\r\n            </div>\r\n        )\r\n    // }\r\n}\r\n\r\nexport default NotFound","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport routes from '../../routes'\r\n\r\nconst AppBar = () => {\r\n    return (\r\n        <header>\r\n            <ul>\r\n              <li>\r\n                <NavLink \r\n                  exact\r\n                  to ={routes.homepage}\r\n                  className=\"NavLink\"\r\n                  activeClassName=\"NavLink--active\"\r\n                >\r\n                  Home\r\n                </NavLink>\r\n              </li>  \r\n              <li>\r\n                <NavLink \r\n                  to ={routes.moviesPage}\r\n                  className=\"NavLink\"\r\n                  activeClassName=\"NavLink--active\"\r\n                >\r\n                  Movie\r\n                </NavLink>\r\n              </li> \r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppBar\r\n","import './App.css';\nimport React, {lazy, Suspense} from 'react'\nimport {Route, Switch} from 'react-router-dom';\nimport NotFound from './components/NotFound/NotFound'\nimport routes from './routes'\nimport AppBar from './components/AppBar/AppBar'\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst HomePageView = lazy(() => import('./components/HomePage/HomePage' /*webpackChunkName: \"homepage-view\" */))\nconst MoviesPageView = lazy(() => import('./components/MoviesPage/MoviesPage' /*webpackChunkName: \"movies-page-view\" */))\nconst MovieDetailsPageView = lazy(() => import('./components/MovieDetailsPage/MovieDetailsPage' /*webpackChunkName: \"movie-details-page-view\" */))\n\nconst App = () => (\n  <>\n    <AppBar />\n    <Suspense fallback={\n      <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    }>\n      <Switch>\n        <Route exact path={routes.homepage} component={HomePageView} />\n        <Route path={routes.movieDetailsPage} component={MovieDetailsPageView} />\n        <Route path={routes.moviesPage} component={MoviesPageView} />\n        <Route component={NotFound}/>  \n      </Switch>\n    </Suspense>\n  </>\n);\n\nexport default App;\n\n      // key c380f664e1da9ad09772f37426d65949\n      // fetch https://api.themoviedb.org/3/movie/550?api_key=c380f664e1da9ad09772f37426d65949\n      // access key eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMzgwZjY2NGUxZGE5YWQwOTc3MmYzNzQyNmQ2NTk0OSIsInN1YiI6IjYwMWQwNWE2ODFhN2ZjMDAzZTA0Njc0YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.lbHosgZWFbMDQIooC6wcWfaoSquyiaadZvGud4YW7R8\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default{\r\n    homepage: \"/\",\r\n    moviesPage: '/movies',\r\n    movieDetailsPage: '/movies/:movieId',\r\n    cast: '/movies/:movieId/cast',\r\n    reviews: '/movies/:movieId/reviews',\r\n}"],"sourceRoot":""}